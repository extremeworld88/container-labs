apiVersion: v1
kind: PersistentVolumeClaim

metadata:
   name: bggdbsvc
   namespace: workshop02
   annotations:
      volume.beta.kubernetes.io/storage-provisioner: "dobs.csi.digitalocean.com"

spec:
   accessModes:
      - ReadWriteOnce
   resources:
      requests:
         storage: 2Gi
   storageClassName: do-block-storage

   
---
apiVersion: apps/v1
kind: Deployment

metadata:
   name: bgg-deployment
   namespace: workshop02

spec:
   replicas: 1
   selector:
      matchLabels:
         app.kubernetes.io/name: bgg-pod

   template:
      metadata:
         name: bgg-pod
         labels:
            app.kubernetes.io/name: bgg-pod
            app.kubernetes.io/version: "v1"
            owner: engineering

      spec:
         volumes:
            - name: dbvol
              persistentVolumeClaim: 
               claimName: bggdbsvc
         initContainers:
            - name: mydb-vol-scrub
              image: busybox
              command: ["/bin/sh", "-c", "test -e /scrub && rm -rf /scrub/..?* /scrub/.[!.]* /scrub/*  && test -z \"$(ls -A /scrub)\" || exit 1"]
              volumeMounts:
              - name: dbvol
                mountPath: /scrub
         containers:
         - name: bgg-db-container 
           image: stackupiss/bgg-db:v1
           imagePullPolicy: Always
           ports:
           - name: bgg-port
             containerPort: 3306
           volumeMounts:
              - mountPath: /var/lib/mysql
                name: dbvol

---

apiVersion: v1
kind: Service

metadata:
   name: bgg-db-svc
   namespace: workshop02
   labels:
      name: bgg-db-svc

spec:
   type: ClusterIP
   selector:
      app.kubernetes.io/name: bgg-pod
   ports:
   - name: mysql-port-svc
     port: 3306
     targetPort: bgg-port


